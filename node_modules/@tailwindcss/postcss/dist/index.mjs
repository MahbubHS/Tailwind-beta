var $=(o,i)=>(i=Symbol[o])?i:Symbol.for("Symbol."+o),L=o=>{throw TypeError(o)};var B=(o,i,l)=>{if(i!=null){typeof i!="object"&&typeof i!="function"&&L("Object expected");var e,s;l&&(e=i[$("asyncDispose")]),e===void 0&&(e=i[$("dispose")],l&&(s=e)),typeof e!="function"&&L("Object not disposable"),s&&(e=function(){try{s.call(this)}catch(t){return Promise.reject(t)}}),o.push([l,e,i])}else l&&o.push([l]);return i},U=(o,i,l)=>{var e=typeof SuppressedError=="function"?SuppressedError:function(r,n,u,p){return p=Error(u),p.name="SuppressedError",p.error=r,p.suppressed=n,p},s=r=>i=l?new e(r,i,"An error was suppressed during disposal"):(l=!0,r),t=r=>{for(;r=o.pop();)try{var n=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(n).then(t,u=>(s(u),t()))}catch(u){s(u)}if(l)throw i};return t()};import Y from"@alloc/quick-lru";import{compileAst as J,env as Z,Features as E,Instrumentation as ee}from"@tailwindcss/node";import{clearRequireCache as te}from"@tailwindcss/node/require-cache";import{Scanner as se}from"@tailwindcss/oxide";import{Features as x,transform as ie}from"lightningcss";import re from"node:fs";import m,{relative as W}from"node:path";import v from"postcss";var j=32;var H=40;function D(o,i=[]){for(let l=5;l<o.length;l++){let e=o.charCodeAt(l);if(e===j||e===H){let s=o.slice(0,l).trim(),t=o.slice(l).trim();return g(s,t,i)}}return g(o.trim(),"",i)}var q=64;function V(o,i=[]){return{kind:"rule",selector:o,nodes:i}}function g(o,i="",l=[]){return{kind:"at-rule",name:o,params:i,nodes:l}}function k(o,i=[]){return o.charCodeAt(0)===q?D(o,i):V(o,i)}function P(o,i,l=!1){return{kind:"declaration",property:o,value:i,important:l}}function R(o){return{kind:"comment",value:o}}function _(o){function i(e,s=0){let t="",r="  ".repeat(s);if(e.kind==="declaration")t+=`${r}${e.property}: ${e.value}${e.important?" !important":""};
`;else if(e.kind==="rule"){t+=`${r}${e.selector} {
`;for(let n of e.nodes)t+=i(n,s+1);t+=`${r}}
`}else if(e.kind==="at-rule"){if(e.nodes.length===0)return`${r}${e.name} ${e.params};
`;t+=`${r}${e.name}${e.params?` ${e.params} `:" "}{
`;for(let n of e.nodes)t+=i(n,s+1);t+=`${r}}
`}else if(e.kind==="comment")t+=`${r}/*${e.value}*/
`;else if(e.kind==="context"||e.kind==="at-root")return"";return t}let l="";for(let e of o){let s=i(e);s!==""&&(l+=s)}return l}import A from"postcss";var X=33;function z(o,i){let l=A.root();l.source=i;function e(s,t){if(s.kind==="declaration"){let r=A.decl({prop:s.property,value:s.value??"",important:s.important});r.source=i,t.append(r)}else if(s.kind==="rule"){let r=A.rule({selector:s.selector});r.source=i,r.raws.semicolon=!0,t.append(r);for(let n of s.nodes)e(n,r)}else if(s.kind==="at-rule"){let r=A.atRule({name:s.name.slice(1),params:s.params});r.source=i,r.raws.semicolon=!0,t.append(r);for(let n of s.nodes)e(n,r)}else if(s.kind==="comment"){let r=A.comment({text:s.value});r.raws.left="",r.raws.right="",r.source=i,t.append(r)}else s.kind==="at-root"||s.kind}for(let s of o)e(s,l);return l}function M(o){function i(e,s){if(e.type==="decl")s.push(P(e.prop,e.value,e.important));else if(e.type==="rule"){let t=k(e.selector);e.each(r=>i(r,t.nodes)),s.push(t)}else if(e.type==="atrule"){let t=g(`@${e.name}`,e.params);e.each(r=>i(r,t.nodes)),s.push(t)}else if(e.type==="comment"){if(e.text.charCodeAt(0)!==X)return;s.push(R(e.text))}}let l=[];return o.each(e=>i(e,l)),l}import{normalizePath as I}from"@tailwindcss/node";import y from"node:path";var N="'",b='"';function w(){let o=new WeakSet;function i(l){let e=l.root().source?.input.file;if(!e)return;let s=l.source?.input.file;if(!s||o.has(l))return;let t=l.params[0],r=t[0]===b&&t[t.length-1]===b?b:t[0]===N&&t[t.length-1]===N?N:null;if(!r)return;let n=l.params.slice(1,-1),u="";if(n.startsWith("!")&&(n=n.slice(1),u="!"),!n.startsWith("./")&&!n.startsWith("../"))return;let p=y.posix.join(I(y.dirname(s)),n),C=y.posix.dirname(I(e)),d=y.posix.relative(C,p);d.startsWith(".")||(d="./"+d),l.params=r+u+d+r,o.add(l)}return{postcssPlugin:"tailwindcss-postcss-fix-relative-paths",Once(l){l.walkAtRules(/source|plugin|config/,i)}}}var a=Z.DEBUG,T=new Y({maxSize:50});function le(o,i){let l=`${o}:${i.base??""}:${JSON.stringify(i.optimize)}`;if(T.has(l))return T.get(l);let e={mtimes:new Map,compiler:null,scanner:null,tailwindCssAst:[],cachedPostCssAst:v.root(),optimizedPostCssAst:v.root(),fullRebuildPaths:[]};return T.set(l,e),e}function ne(o={}){let i=o.base??process.cwd(),l=o.optimize??process.env.NODE_ENV==="production";return{postcssPlugin:"@tailwindcss/postcss",plugins:[w(),{postcssPlugin:"tailwindcss",async Once(e,{result:s}){var O=[];try{let t=B(O,new ee);let r=s.opts.from??"";a&&t.start(`[@tailwindcss/postcss] ${W(i,r)}`);{a&&t.start("Quick bail check");let f=!0;if(e.walkAtRules(c=>{if(c.name==="import"||c.name==="theme"||c.name==="config"||c.name==="plugin"||c.name==="apply")return f=!1,!1}),f)return;a&&t.end("Quick bail check")}let n=le(r,o);let u=m.dirname(m.resolve(r));async function p(){a&&t.start("Setup compiler"),n.fullRebuildPaths.length>0&&!C&&te(n.fullRebuildPaths),n.fullRebuildPaths=[],a&&t.start("PostCSS AST -> Tailwind CSS AST");let f=M(e);a&&t.end("PostCSS AST -> Tailwind CSS AST"),a&&t.start("Create compiler");let c=await J(f,{base:u,onDependency:h=>{n.fullRebuildPaths.push(h)}});return a&&t.end("Create compiler"),a&&t.end("Setup compiler"),c}let C=n.compiler===null;n.compiler??=await p();if(n.compiler.features===E.None)return;let d="incremental";a&&t.start("Register full rebuild paths");{for(let c of n.fullRebuildPaths)s.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:m.resolve(c),parent:s.opts.from});let f=s.messages.flatMap(c=>c.type!=="dependency"?[]:c.file);f.push(r);for(let c of f){let h=re.statSync(c,{throwIfNoEntry:!1})?.mtimeMs??null;if(h===null){c===r&&(d="full");continue}n.mtimes.get(c)!==h&&(d="full",n.mtimes.set(c,h))}}a&&t.end("Register full rebuild paths");d==="full"&&!C&&(n.compiler=await p());if(n.scanner===null||d==="full"){a&&t.start("Setup scanner");let f=(n.compiler.root==="none"?[]:n.compiler.root===null?[{base:i,pattern:"**/*"}]:[n.compiler.root]).concat(n.compiler.globs);n.scanner=new se({sources:f}),a&&t.end("Setup scanner")}a&&t.start("Scan for candidates");let F=n.compiler.features&E.Utilities?n.scanner.scan():[];a&&t.end("Scan for candidates");if(n.compiler.features&E.Utilities){a&&t.start("Register dependency messages");for(let f of n.scanner.files)s.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:m.resolve(f),parent:s.opts.from});for(let{base:f,pattern:c}of n.scanner.globs)c==="*"&&i===f||(c===""?s.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:m.resolve(f),parent:s.opts.from}):s.messages.push({type:"dir-dependency",plugin:"@tailwindcss/postcss",dir:m.resolve(f),glob:c,parent:s.opts.from}));a&&t.end("Register dependency messages")}a&&t.start("Build utilities");let S=n.compiler.build(F);a&&t.end("Build utilities");if(n.tailwindCssAst!==S)if(l){a&&t.start("Optimization"),a&&t.start("AST -> CSS");let f=_(S);a&&t.end("AST -> CSS"),a&&t.start("Lightning CSS");let c=oe(f,{minify:typeof l=="object"?l.minify:!0});a&&t.end("Lightning CSS"),a&&t.start("CSS -> PostCSS AST"),n.optimizedPostCssAst=v.parse(c,s.opts),a&&t.end("CSS -> PostCSS AST"),a&&t.end("Optimization")}else a&&t.start("Transform Tailwind CSS AST into PostCSS AST"),n.cachedPostCssAst=z(S,e.source),a&&t.end("Transform Tailwind CSS AST into PostCSS AST");n.tailwindCssAst=S;a&&t.start("Update PostCSS AST");e.removeAll();e.append(l?n.optimizedPostCssAst.clone().nodes:n.cachedPostCssAst.clone().nodes);e.raws.indent="  ";a&&t.end("Update PostCSS AST");a&&t.end(`[@tailwindcss/postcss] ${W(i,r)}`)}catch(G){var K=G,Q=!0}finally{U(O,K,Q)}}}]}}function oe(o,{file:i="input.css",minify:l=!1}={}){function e(s){return ie({filename:i,code:s,minify:l,sourceMap:!1,drafts:{customMedia:!0},nonStandard:{deepSelectorCombinator:!0},include:x.Nesting,exclude:x.LogicalProperties|x.DirSelector|x.LightDark,targets:{safari:16<<16|1024,ios_saf:16<<16|1024,firefox:8388608,chrome:7274496},errorRecovery:!0}).code}return e(e(Buffer.from(o))).toString()}var Oe=Object.assign(ne,{postcss:!0});export{Oe as default};
